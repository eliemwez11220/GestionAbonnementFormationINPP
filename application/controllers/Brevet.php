<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Brevet extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Brevet_model');
    } 

    /*
     * Listing of brevets
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('brevet/index?');
        $config['total_rows'] = $this->Brevet_model->get_all_brevets_count();
        $this->pagination->initialize($config);

        $data['brevets'] = $this->Brevet_model->get_all_brevets($params);
        
        $data['_view'] = 'brevet/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new brevet
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('numRef','NumRef','required|is_unique[brevets.numRef]');
		$this->form_validation->set_rules('candidat_sid','Candidat Sid','required');
		$this->form_validation->set_rules('pourcentage','Pourcentage','required');
		$this->form_validation->set_rules('mention','Mention','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'candidat_sid' => $this->input->post('candidat_sid'),
				'numRef' => $this->input->post('numRef'),
				'dateBrevet' => $this->input->post('dateBrevet'),
				'pourcentage' => $this->input->post('pourcentage'),
				'mention' => $this->input->post('mention'),
				'coteObtenue' => $this->input->post('coteObtenue'),
				'specialite' => $this->input->post('specialite'),
            );
            
            $brevet_id = $this->Brevet_model->add_brevet($params);
            redirect('brevet/index');
        }
        else
        {
			$this->load->model('Candidat_model');
			$data['all_candidats'] = $this->Candidat_model->get_all_candidats();
            
            $data['_view'] = 'brevet/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a brevet
     */
    function edit($brev_id)
    {   
        // check if the brevet exists before trying to edit it
        $data['brevet'] = $this->Brevet_model->get_brevet($brev_id);
        
        if(isset($data['brevet']['brev_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('numRef','NumRef','required|is_unique[brevets.numRef]');
			$this->form_validation->set_rules('candidat_sid','Candidat Sid','required');
			$this->form_validation->set_rules('pourcentage','Pourcentage','required');
			$this->form_validation->set_rules('mention','Mention','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'candidat_sid' => $this->input->post('candidat_sid'),
					'numRef' => $this->input->post('numRef'),
					'dateBrevet' => $this->input->post('dateBrevet'),
					'pourcentage' => $this->input->post('pourcentage'),
					'mention' => $this->input->post('mention'),
					'coteObtenue' => $this->input->post('coteObtenue'),
					'specialite' => $this->input->post('specialite'),
                );

                $this->Brevet_model->update_brevet($brev_id,$params);            
                redirect('brevet/index');
            }
            else
            {
				$this->load->model('Candidat_model');
				$data['all_candidats'] = $this->Candidat_model->get_all_candidats();

                $data['_view'] = 'brevet/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The brevet you are trying to edit does not exist.');
    } 

    /*
     * Deleting brevet
     */
    function remove($brev_id)
    {
        $brevet = $this->Brevet_model->get_brevet($brev_id);

        // check if the brevet exists before trying to delete it
        if(isset($brevet['brev_id']))
        {
            $this->Brevet_model->delete_brevet($brev_id);
            redirect('brevet/index');
        }
        else
            show_error('The brevet you are trying to delete does not exist.');
    }
    
}
