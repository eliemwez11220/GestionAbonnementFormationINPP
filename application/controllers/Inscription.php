<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inscription extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Inscription_model');
    } 

    /*
     * Listing of inscriptions
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('inscription/index?');
        $config['total_rows'] = $this->Inscription_model->get_all_inscriptions_count();
        $this->pagination->initialize($config);

        $data['inscriptions'] = $this->Inscription_model->get_all_inscriptions($params);
        
        $data['_view'] = 'inscription/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new inscription
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('candidat_sid','Candidat Sid','required');
		$this->form_validation->set_rules('formation_sid','Formation Sid','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'candidat_sid' => $this->input->post('candidat_sid'),
				'formation_sid' => $this->input->post('formation_sid'),
				'dateInscription' => $this->input->post('dateInscription'),
				'statutInscription' => $this->input->post('statutInscription'),
				'dateValidation' => $this->input->post('dateValidation'),
				'observation' => $this->input->post('observation'),
            );
            
            $inscription_id = $this->Inscription_model->add_inscription($params);
            redirect('inscription/index');
        }
        else
        {
			$this->load->model('Candidat_model');
			$data['all_candidats'] = $this->Candidat_model->get_all_candidats();

			$this->load->model('Formation_model');
			$data['all_formations'] = $this->Formation_model->get_all_formations();
            
            $data['_view'] = 'inscription/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a inscription
     */
    function edit($ins_id)
    {   
        // check if the inscription exists before trying to edit it
        $data['inscription'] = $this->Inscription_model->get_inscription($ins_id);
        
        if(isset($data['inscription']['ins_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('candidat_sid','Candidat Sid','required');
			$this->form_validation->set_rules('formation_sid','Formation Sid','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'candidat_sid' => $this->input->post('candidat_sid'),
					'formation_sid' => $this->input->post('formation_sid'),
					'dateInscription' => $this->input->post('dateInscription'),
					'statutInscription' => $this->input->post('statutInscription'),
					'dateValidation' => $this->input->post('dateValidation'),
					'observation' => $this->input->post('observation'),
                );

                $this->Inscription_model->update_inscription($ins_id,$params);            
                redirect('inscription/index');
            }
            else
            {
				$this->load->model('Candidat_model');
				$data['all_candidats'] = $this->Candidat_model->get_all_candidats();

				$this->load->model('Formation_model');
				$data['all_formations'] = $this->Formation_model->get_all_formations();

                $data['_view'] = 'inscription/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The inscription you are trying to edit does not exist.');
    } 

    /*
     * Deleting inscription
     */
    function remove($ins_id)
    {
        $inscription = $this->Inscription_model->get_inscription($ins_id);

        // check if the inscription exists before trying to delete it
        if(isset($inscription['ins_id']))
        {
            $this->Inscription_model->delete_inscription($ins_id);
            redirect('inscription/index');
        }
        else
            show_error('The inscription you are trying to delete does not exist.');
    }
    
}
